digraph RDN{
0[style="filled" label="<=()" color="gray92"];
1[style="filled" label="childof(name,name)" color="gray92"];
2[style="filled" label="memberOfList(willAnything,willList)" color="gray82"];
8 -> 2[label="" style=dashed];
3[style="filled" label="number()" color="gray92"];
4[style="filled" label="intersection()" color="gray82"];
4 -> 4[label="" style=dashed];
5[style="filled" label="different()" color="gray82"];
21 -> 5[label="" style=dashed];
6[style="filled" label="=<()" color="gray92"];
7[style="filled" label="var()" color="gray92"];
8[style="filled" label="list()" color="gray92"];
9[style="filled" label="equalWithSmallTolerance()" color="gray82"];
14 -> 9[label="" style=dashed];
3 -> 9[label="" style=dashed];
10[style="filled" label="fail()" color="gray92"];
11[style="filled" label="contains()" color="gray82"];
11 -> 11[label="" style=dashed];
12[style="filled" label="true()" color="gray92"];
13[style="filled" label="ground()" color="gray92"];
14[style="filled" label="<()" color="gray92"];
15[style="filled" label="multiplyListOfNumbers()" color="gray92"];
16[style="filled" label="male(name)" color="gray92"];
17[style="filled" label=">=()" color="gray92"];
18[style="filled" label="allNumbers(willList)" color="gray82"];
3 -> 18[label="" style=dashed];
18 -> 18[label="" style=dashed];
19[style="filled" label="father(name,name)" color="gray52"];
1 -> 19[label="" style=solid];
16 -> 19[label="" style=solid];
20[style="filled" label="isaInterestingNumber()" color="gray82"];
20 -> 20[label="" style=dashed];
9 -> 20[label="" style=dashed];
21[style="filled" label="\+()" color="gray92"];
22[style="filled" label="isaInterestingSymbol()" color="gray82"];
22 -> 22[label="" style=dashed];
23[style="filled" label="isaEqualTolerance(willNumber)" color="gray82"];
17 -> 23[label="" style=dashed];
3 -> 23[label="" style=dashed];
24[style="filled" label="addListOfNumbers()" color="gray92"];
25[style="filled" label="false()" color="gray92"];
26[style="filled" label="union()" color="gray82"];
26 -> 26[label="" style=dashed];
21 -> 26[label="" style=dashed];
27[style="filled" label="call()" color="gray92"];
28[style="filled" label="sameAs()" color="gray82"];
3 -> 28[label="" style=dashed];
28 -> 28[label="" style=dashed];
9 -> 28[label="" style=dashed];
}
